<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>be.mainsys.poc</groupId>
    <artifactId>mainsys-jbpm-web</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>
    

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JBoss dependency versions -->
        <version.jboss.maven.plugin>7.4.Final</version.jboss.maven.plugin>

        <!-- Define the version of the JBoss BOMs we want to import to specify tested stacks. -->
        <version.jboss.bom.eap>7.0.3.GA</version.jboss.bom.eap>
        <jbpm.version>6.5.0.Final-redhat-2</jbpm.version>

        <!-- other plugin versions -->
        <version.war.plugin>2.1.1</version.war.plugin>

        <!-- maven-compiler-plugin -->
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-eap-javaee7-with-tools</artifactId>
                <version>${version.jboss.bom.eap}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
		      <dependency>
		        <groupId>org.jbpm</groupId>
		        <artifactId>jbpm-bom</artifactId>
		        <version>${jbpm.version}</version>
		        <scope>import</scope>
		        <type>pom</type>
		      </dependency>
		    </dependencies>		 
    </dependencyManagement>
    <dependencies>
        <!-- Import the JPA API, we use provided scope as the API is included in JBoss EAP 6 -->
		<dependency>
			<groupId>org.jboss.spec.javax.transaction</groupId>
			<artifactId>jboss-transaction-api_1.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>
        <!-- Import the JSF API, we use provided scope as the API is included in JBoss EAP 6 -->
        <dependency>
            <groupId>org.jboss.spec.javax.faces</groupId>
            <artifactId>jboss-jsf-api_2.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the JPA API, we use provided scope as the API is included in JBoss EAP 6 -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the JMS API, we use provided scope as the API is included in JBoss EAP 6 -->
        <dependency>
            <groupId>org.jboss.spec.javax.jms</groupId>
            <artifactId>jboss-jms-api_2.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the EJB API, we use provided scope as the API is included in JBoss EAP 6 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
            <groupId>org.jboss.ejb3</groupId>
            <artifactId>jboss-ejb3-ext-api</artifactId>
            <scope>provided</scope>
        </dependency>
		<dependency>
            <groupId>com.sun.istack</groupId>
            <artifactId>istack-commons-runtime</artifactId>
            <version>2.21.0.redhat-1</version>
            <scope>provided</scope>
        </dependency>
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>
        <!-- Import the injection annotations -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
			<groupId>org.jboss.spec.javax.servlet</groupId>
			<artifactId>jboss-servlet-api_3.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>
        
        <!-- jBPM 6 dependencies -->
	    <dependency>
	      <groupId>org.kie</groupId>
	      <artifactId>kie-api</artifactId>
	    </dependency>
	    <dependency>
	      <groupId>org.jbpm</groupId>
	      <artifactId>jbpm-human-task-core</artifactId>
	    </dependency>
		<dependency>
			<groupId>org.jbpm</groupId>
			<artifactId>jbpm-services-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jbpm</groupId>
			<artifactId>jbpm-services-ejb-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jbpm</groupId>
			<artifactId>jbpm-services-ejb-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jbpm</groupId>
			<artifactId>jbpm-kie-services</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jbpm</groupId>
			<artifactId>jbpm-workitems</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jbpm</groupId>
			<artifactId>jbpm-executor</artifactId>
		</dependency>
        
        <!-- Import the jBPM Project to access the Custom Object -->
        <dependency>
          <groupId>be.mainsys.poc.jbpm</groupId>
		  <artifactId>mainsys-jbpm-demo</artifactId>
		  <version>1.0</version>
        </dependency>
    
		<dependency>
		    <groupId>org.apache.cxf</groupId>
		    <artifactId>cxf-rt-frontend-jaxws</artifactId>
		    <version>2.7.18.SP1-redhat-1</version>
		    <scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>org.apache.cxf</groupId>
		    <artifactId>cxf-rt-transports-http</artifactId>
		    <version>2.7.18.SP1-redhat-1</version>
		    <scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>org.apache.cxf</groupId>
		    <artifactId>cxf-api</artifactId>
		    <version>2.7.18.SP1-redhat-1</version>
		    <scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>org.apache.cxf</groupId>
		    <artifactId>cxf-rt-bindings-soap</artifactId>
		    <version>2.7.18.SP1-redhat-1</version>
		    <scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>org.apache.cxf</groupId>
		    <artifactId>cxf-rt-bindings-xml</artifactId>
		    <version>2.7.18.SP1-redhat-1</version>
		    <scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>org.apache.cxf</groupId>
		    <artifactId>cxf-rt-core</artifactId>
		    <version>2.7.18.SP1-redhat-1</version>
		    <scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>org.apache.cxf</groupId>
		    <artifactId>cxf-rt-databinding-jaxb</artifactId>
		    <version>2.7.18.SP1-redhat-1</version>
		    <scope>provided</scope>
		</dependency>
        
        <!-- Needed for running tests (you may also use TestNG) -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        
        <!-- Override Transitive Dependency issue with compiling BPMN -->
        <dependency>
	      <groupId>com.sun.xml.bind</groupId>
	      <artifactId>jaxb-core</artifactId>
	      <version>2.2.11</version>
	      <scope>compile</scope>
	    </dependency>
	    <dependency>
	      <groupId>com.sun.xml.bind</groupId>
	      <artifactId>jaxb-xjc</artifactId>
	      <version>2.2.11</version>
	      <scope>compile</scope>
	    </dependency>
	    <dependency>
	      <groupId>com.sun.xml.bind</groupId>
	      <artifactId>jaxb-impl</artifactId>
	      <version>2.2.11</version>
	      <scope>compile</scope>
	    </dependency>

    </dependencies>
    <build>
        <!-- Maven will append the version to the finalName (which is the 
            name given to the generated war, and hence the context root) -->
        <finalName>${project.artifactId}</finalName>
        <sourceDirectory>src/main/java</sourceDirectory>
        
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.war.plugin}</version>
                <configuration>
                    <!-- Java EE 6 doesn't require web.xml, Maven needs to 
                        catch up! -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <!-- The JBoss AS plugin deploys your war to a local JBoss EAP 
                container -->
            <!-- To use, set the JBOSS_HOME environment variable and run: 
                mvn package jboss-as:deploy -->
            <plugin>
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
                <version>${version.jboss.maven.plugin}</version>
            </plugin>
        </plugins>
    </build>
</project>
